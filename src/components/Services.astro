---
import { CodeIcon, LayoutIcon, SearchIcon  } from 'astro-feather';

export interface ServiceItem {
  title: string;
  body: string;
  icon: string;
}

type Props = {
  size: number;
  strokeWidth: number;
  customClasses: string;
};

const { size, strokeWidth, customClasses } = Astro.props;

const iconMap: { [key: string]: (_props: Props) => any } = {
  code: CodeIcon,
  layout: LayoutIcon,
  search: SearchIcon,
};

const services: ServiceItem[] = [
  { title: 'Web<br/>Development', body: 'I can help you build your next website or web application.', icon: 'code' },
  { title: 'UI/UX Design', body: 'I can help you design a beautiful and user-friendly interface.', icon: 'layout' },
  { title: 'SEO<br/>Optimization', body: 'I can help you optimize your website for search engines.', icon: 'search'},
];
---
<section class="w-full bg-white pt-28 lg:pt-48">
  <div class="container mx-auto">
    <div class="grid grid-cols-12 gap-4">
      <div class="col-span-12 border-t">
        <div class="py-5 flex justify-between">
          <span class="uppercase">(Services)</span>
          <span class="">03</span>
        </div>
        <h2 class="text-4xl font-display font-bold">Expertise</h2>
        <div class="mt-16">
          { services.map((item, index) => {
            const IconComponent = iconMap[item.icon] || null;
            return (
            <div class="py-14 border-b first:border-t">
              <div class="grid grid-cols-[1fr_5fr_2fr] grid-rows-[auto_auto_auto] lg:grid-cols-3 lg:grid-row-none xl:grid-cols-4 lg:gap-4">
                <span class="text-2xl lg:text-3xl font-semibold order-2 lg:order-1 row-span-1 col-span-1">{(index + 1).toString().padStart(2,'0')}.</span>
                <h3 class="text-2xl lg:text-3xl font-semibold lg:col-span-1 xl:col-auto order-2 row-span-1 col-span-1" set:html={item.title} />
                <p class="text-lg lg:text-xl text-boulder-500 lg:col-start-2 lg:row-start-2 xl:col-auto xl:row-auto order-3 row-start-3 row-end-4 col-start-1 col-end-4">{ item.body }</p>
                <div class="flex lg:justify-end text-end order-1 lg:order-4 col-start-1 col-end-4 lg:col-start-auto lg:col-end-auto">
                  {IconComponent ? (
                      <IconComponent size={size} strokeWidth={strokeWidth} customClasses={customClasses} />
                    ) : (
                      <div>Icon not found</div>
                    )}
                </div>
              </div>
            </div>
          )})}
        </div>
      </div>
    </div>
  </div>
</section>
